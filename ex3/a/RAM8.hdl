// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=tmpa, b=tmpb, c=tmpc, d=tmpd, e=tmpe, f=tmpf, g=tmpg, h=tmph);
    Register(in=in, load=tmpa, out=otmpa);
    Register(in=in, load=tmpb, out=otmpb);
    Register(in=in, load=tmpc, out=otmpc);
    Register(in=in, load=tmpd, out=otmpd);
    Register(in=in, load=tmpe, out=otmpe);
    Register(in=in, load=tmpf, out=otmpf);
    Register(in=in, load=tmpg, out=otmpg);
    Register(in=in, load=tmph, out=otmph);
    Mux8Way16(a=otmpa, b=otmpb, c=otmpc, d=otmpd, e=otmpe, f=otmpf, g=otmpg, h=otmph, sel=address, out=out);
}